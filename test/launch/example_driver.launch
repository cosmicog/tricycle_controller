<launch>
  <!-- Run driver -->
  <node name="example_driver" pkg="tricycle_controller" type="example_driver_node"/>

  <!-- load robot -->
  <param name="robot_description"
         command="$(find xacro)/xacro --inorder '$(find tricycle_controller)/test/urdf/tricycle.urdf.xacro'" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Load controller config -->
  <rosparam command="load" file="$(find tricycle_controller)/test/config/tricycle_controllers.yaml" />
  <rosparam command="load" file="$(find tricycle_controller)/test/config/tricycle_limits.yaml" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_tricycle" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model tricycle -z 0.5" respawn="false" output="screen" />

  <!-- Spawn controller -->

  <node name="controller_spawner"
        pkg="controller_manager" type="spawner" output="screen"
        args="tricycle_controller --shutdown-timeout 3"/>

  <!--
  <node pkg="joy" type="joy_node" name="joy_node">
    <param name="dev" value="/dev/input/js0" />
  </node>

  <node pkg="teleop_twist_joy" type="teleop_node" name="teleop_twist_joy">
  </node>
  -->
  <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering">
    <remap from="cmd_vel" to="tricycle_controller/command"/>
  </node>

  <!--
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find ackermann_controller)/test/config/view_odom.rviz"/>
  -->
</launch>
